on:
  push:
    branches:
      - '*'

name: Deploy to AWS

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Test
      run: |
        echo "Test!"

  deploy:
    needs: test
    name: Deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && contains(github.event.head_commit.message, 'Merge pull request')

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Upload file to S3
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      run: |
        aws s3 cp $HOME/.docker/config.json s3://$AWS_S3_BUCKET/ --quiet

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ./docker/app/Dockerfile .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install awsebcli
      run: pip install -U awsebcli

    - name: deploy
      run: ./eb_deploy.sh
